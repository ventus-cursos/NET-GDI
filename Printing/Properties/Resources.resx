<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque ipsum purus, pretium ut porttitor eu, volutpat quis est. Pellentesque vestibulum diam sed diam rhoncus scelerisque at at urna. Nullam tincidunt a dolor in viverra. Curabitur ornare id nisl ac sollicitudin. Vestibulum pellentesque tempor est, vitae cursus nulla consectetur vel. Fusce facilisis turpis ac augue ullamcorper, quis ornare quam bibendum. Nulla imperdiet nibh vel massa tincidunt, eget eleifend odio viverra. Morbi euismod tristique sapien. Phasellus elementum est orci, dictum aliquet elit semper ac.

Donec pulvinar varius orci, in rhoncus ipsum accumsan sit amet. Pellentesque massa tortor, viverra sit amet nisi eget, lobortis tristique sem. Vestibulum vitae mattis magna. Donec quis leo pellentesque, consequat libero non, suscipit diam. Mauris fermentum sollicitudin orci quis tincidunt. Quisque purus tellus, efficitur quis pulvinar quis, lobortis eget lorem. Morbi non rutrum lorem. Duis orci dolor, vehicula id massa id, placerat malesuada felis. Pellentesque tincidunt pretium lacus. In quis quam ac neque eleifend viverra. Curabitur ut eleifend magna, vel iaculis arcu. Cras mattis leo vitae blandit vulputate. Quisque quis tristique nisi, eget dapibus velit. Suspendisse pellentesque erat quis sagittis elementum.

Proin aliquet gravida egestas. Nam mollis lorem lectus, vestibulum volutpat sem interdum id. Donec placerat urna eu elementum sollicitudin. Donec elit mi, commodo nec dolor ac, efficitur tempor mauris. Donec ipsum lacus, efficitur euismod arcu eget, condimentum accumsan justo. Integer et sem sodales, aliquam eros eget, imperdiet urna. Maecenas vitae commodo ligula. Donec vel fringilla nisi, et commodo leo. Donec lobortis eu elit sed aliquam. Nullam ac vestibulum velit. Nam cursus pellentesque tempor.

In ac lobortis metus. Cras pellentesque justo commodo, tristique enim ac, mollis magna. Donec et dignissim ex. Donec eget enim sed nunc aliquam sagittis sit amet et risus. Quisque commodo, tellus in cursus egestas, velit tellus pulvinar orci, eget vulputate nibh neque vel risus. Donec accumsan condimentum sapien a hendrerit. Donec felis eros, molestie ac auctor at, pulvinar nec lorem. Etiam aliquam, neque vel lobortis finibus, nibh felis consequat turpis, ac placerat augue lectus at risus. Donec nulla augue, tincidunt sed rhoncus ut, eleifend in risus. In blandit nibh sed erat euismod, et porttitor velit dignissim. Phasellus pharetra dignissim nibh, et volutpat risus dictum id. Integer ac pellentesque lorem.

Phasellus ac venenatis nibh, in eleifend ipsum. Ut at tincidunt turpis, vel consequat justo. Vivamus posuere tortor et libero interdum blandit. Nam in neque at nisi tincidunt finibus. Proin ac augue sit amet mi placerat fringilla quis vitae arcu. Donec sem ante, placerat quis libero a, tristique tristique neque. Curabitur blandit vitae ex nec maximus. Sed eget ipsum diam. Praesent condimentum eros eget sem ornare, in faucibus mauris elementum. Phasellus facilisis eget ipsum eget molestie. Pellentesque eu pretium eros, at suscipit elit.</value>
  </data>
</root>